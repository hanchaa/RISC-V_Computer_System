name: Build and deploy documentation
on:
  push:
    branches-ignore:
      - gh-pages  # deployment target branch (this workflow should not exist on that branch anyway)
      - v**       # such branch names conflict with tags
    tags:
      - v**

jobs:
  build-and-deploy:
    if: github.repository == 'pulp-platform/axi'  # do not run this job on forks (because deployment
    runs-on: ubuntu-latest                        # will fail)
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ubuntu-latest-cargo-registry-${{ hashFiles('.github/workflows/doc.yml') }}

      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ubuntu-latest-cargo-index-${{ hashFiles('.github/workflows/doc.yml') }}

      - name: Cache cargo binaries
        uses: actions/cache@v1
        with:
          path: ~/.cargo/bin
          key: ubuntu-latest-cargo-binaries-${{ hashFiles('.github/workflows/doc.yml') }}

      - name: Install Bender and Morty
        run: |
          rustup update stable --no-self-update && rustup default stable
          if ! $(which bender); then
            cargo install bender --version 0.18.0
          fi
          if ! $(which morty); then
            cargo install --git https://github.com/zarubaf/morty --rev 4855119c1378d45d9ac35cfa525725d2786e68f3
          fi
        shell: bash

      - name: Build documentation
        run: |
          mkdir -p docs
          morty -I include -I $(bender path common_cells)/include src/*.sv -d docs
        shell: bash

      - name: Determine documentation target folder
        run: |
          if echo $GITHUB_REF | grep -qE '^refs/(heads|tags)'; then
            DOC_TARGET="$(echo $GITHUB_REF | cut -d '/' -f3-)"
          else
            echo "Error: Could not derive documentation target folder for ref '$GITHUB_REF'!"
            exit 1
          fi
          echo "::set-env name=DOC_TARGET::$DOC_TARGET"

      - name: Deploy documentation
        uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          BRANCH: gh-pages # The branch the action should deploy to.
          FOLDER: docs # The folder the action should deploy.
          TARGET_FOLDER: ${{ env.DOC_TARGET }}
          CLEAN: true # remove files from `TARGET_FOLDER` that are not in `FOLDER`
                      # (`rsync --delete`)
